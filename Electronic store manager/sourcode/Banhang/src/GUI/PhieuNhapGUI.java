/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;
import BLL.thietbiBus;
import BLL.chitietphieunhapBUS;
import BLL.loaiTBBUS;
import DTO.phieunhapDTO;
import BLL.phieunhapBUS;
import DTO.thietbiDTO;
import DTO.chitietphieunhapDTO;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MY PC
 */
public class PhieuNhapGUI extends javax.swing.JPanel 
{
    DefaultTableModel model =new DefaultTableModel();
    JLabel suaBtn;
 JTextFieldDateEditor ngaylapTxt;
    DefaultTableModel modelTb1 =new DefaultTableModel();
    String ngnhap = "";
    DefaultTableModel modelTb2 =new DefaultTableModel();
    String trangthai ="";
    SimpleDateFormat sp;
    thietbiDTO aDTO=new thietbiDTO();
    loaiTBBUS blll=new loaiTBBUS();
    CheckLoi cl = new CheckLoi();
    phieunhapBUS pnbus = new phieunhapBUS();
    
    public static String idNcc;
    float tongtien = 0;
    chitietphieunhapDTO ctpn=new chitietphieunhapDTO();
    phieunhapDTO pn=new phieunhapDTO();
    /**
     * Creates new form phieunhapGUI
     */
    public PhieuNhapGUI() 
    {
        initComponents();               
        docthietbi();
//        loadCombobox1();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        addBtn = new javax.swing.JLabel();
        docBtn = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ChitietBtn = new javax.swing.JLabel();
        themSpBtn = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        pntable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        ctpntable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lbidpn = new javax.swing.JLabel();
        TxtTongtien = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(800, 600));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 0));
        jLabel2.setText("Danh sách phiếu nhập");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 51, 0));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/icons8-password-30.png"))); // NOI18N
        jLabel3.setText("Nhập Hàng");

        addBtn.setBackground(new java.awt.Color(255, 153, 0));
        addBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        addBtn.setForeground(new java.awt.Color(255, 255, 255));
        addBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/icons8-add-20.png"))); // NOI18N
        addBtn.setText("Nhập hàng");
        addBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addBtn.setOpaque(true);
        addBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addBtnMouseExited(evt);
            }
        });

        docBtn.setBackground(new java.awt.Color(255, 153, 0));
        docBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        docBtn.setForeground(new java.awt.Color(255, 255, 255));
        docBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        docBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/icons8-available-updates-20.png"))); // NOI18N
        docBtn.setText("Reset");
        docBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        docBtn.setOpaque(true);
        docBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                docBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                docBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                docBtnMouseExited(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 51, 0));
        jLabel4.setText("Chi tiết phiếu nhập");

        ChitietBtn.setBackground(new java.awt.Color(255, 153, 0));
        ChitietBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ChitietBtn.setForeground(new java.awt.Color(255, 255, 255));
        ChitietBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ChitietBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/icons8-paid-search-20.png"))); // NOI18N
        ChitietBtn.setText("Lịch sử ");
        ChitietBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ChitietBtn.setOpaque(true);
        ChitietBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ChitietBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ChitietBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ChitietBtnMouseExited(evt);
            }
        });

        themSpBtn.setBackground(new java.awt.Color(255, 153, 0));
        themSpBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        themSpBtn.setForeground(new java.awt.Color(255, 255, 255));
        themSpBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        themSpBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/icons8-downloading-updates-20.png"))); // NOI18N
        themSpBtn.setText("Hàng mới");
        themSpBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        themSpBtn.setOpaque(true);
        themSpBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                themSpBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                themSpBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                themSpBtnMouseExited(evt);
            }
        });

        jScrollPane3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane3MouseClicked(evt);
            }
        });

        pntable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        pntable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pntableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(pntable);

        ctpntable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ctpntable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ctpntableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(ctpntable);

        jLabel1.setText("IDPhiếuNhập:");

        lbidpn.setForeground(new java.awt.Color(255, 51, 51));
        lbidpn.setText(" ");

        TxtTongtien.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(docBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(themSpBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(211, 211, 211))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(623, 623, 623)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbidpn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ChitietBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(297, 297, 297)
                        .addComponent(jLabel3)))
                .addContainerGap(32, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(169, 169, 169)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TxtTongtien, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbidpn))))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(docBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(themSpBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ChitietBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39))
                    .addComponent(TxtTongtien))
                .addContainerGap(102, Short.MAX_VALUE))
        );

        jScrollPane4.getAccessibleContext().setAccessibleParent(jScrollPane4);
    }// </editor-fold>//GEN-END:initComponents
    public void reset()//reset txt field
    {       
        docthietbi();
        phieunhapBUS bus = new phieunhapBUS();
        int rowCount = modelTb2.getRowCount();//remove all row
            for (int i = rowCount - 1; i >= 0; i--) {
                modelTb2.removeRow(i);
            }
    }
    
    public void addtTb1to2()//them thietbi vào table chitietsanpham
    {
        //        
//        try
//        {
        int i = pntable.getSelectedRow();       
        Vector header = new Vector();
        header.add("Id sản phẩm");
        header.add("Tên sản phẩm");
        header.add("Giá nhập");
        header.add("Loại");
        header.add("Số lượng");       
        if (modelTb2.getRowCount()==0)
            { 
                modelTb2=new DefaultTableModel(header,0);
            } 
        String soluong = JOptionPane.showInputDialog(null, "Nhập số lượng");
        if(soluong == null)
        {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập giá trị");
        }
        else if(cl.kiemtraSo(soluong) == false )
        {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập đúng kiểu số");
        }
        else if(cl.kiemtraSokitu(soluong, 11) == false){
                    JOptionPane.showMessageDialog(null,"So luong qua nhieu");
        }
        
        else
        {
//        float thanhtien;
//        thanhtien = Float.parseFloat(soluong) * (Float.parseFloat((String)pntable.getValueAt(i, 3)));
        
        Vector row = new Vector();
        row.add(pntable.getValueAt(i, 0));
        row.add(pntable.getValueAt(i, 1));
        row.add(pntable.getValueAt(i, 3));
        row.add(pntable.getValueAt(i, 2));
        row.add(Integer.parseInt(soluong));
//        row.add(thanhtien);

   
        modelTb2.addRow(row);
        modelTb1.removeRow(i);
        
//        tongtien += thanhtien;
//        TxtTongtien.setText(Float.toString(tongtien));
        //add model to jtable
        ctpntable.setModel(modelTb2);
        
        }
//        } catch(Exception e)
//        {
//            System.out.println(e);
//            System.out.println("Sai chuyen tu tb1 sang tb2");
//        }
    }
            
    public void addTb2to1()//them thiet bị vào table thiet bi
    {
        try
        {
        Vector header = new Vector();
        header.add("Sp_id");      
        header.add("Tên sp");
        header.add("Loai");
        header.add("Đơn giá");
        header.add("Tồn kho");              
        header.add("Đã bán");
//        header.add("");     
        if (modelTb1.getRowCount()==0)
            { 
                modelTb1=new DefaultTableModel(header,0);
            } 
        int i = ctpntable.getSelectedRow();   
        for(thietbiDTO a : thietbiBus.sumArrtb)
        {
            if(a.sp_id==Integer.parseInt((String)ctpntable.getValueAt(i, 0)))
                {
                    Vector row = new Vector();
                    row.add(ctpntable.getValueAt(i, 0));
                    row.add(ctpntable.getValueAt(i, 1)); 
                    row.add(ctpntable.getValueAt(i, 3));
                    row.add(a.sp_dongia);
                    row.add(a.sp_tonkho);
                    row.add(a.sp_daban);
                    modelTb1.addRow(row);
                    break;
                }
            }
            System.out.println("hello");
            System.out.println(tongtien);
            float thanhtien = (float)ctpntable.getValueAt(i, 5);
        tongtien -= thanhtien;
        TxtTongtien.setText(Float.toString(tongtien));
        modelTb2.removeRow(i);
        pntable.setModel(modelTb1);  //them lai vao bang thiet bị
        docthietbi();
        
        }
        catch(Exception e)
        {
            
        }
    }
    public void them()
    {
        Date thisday=new Date();
        SimpleDateFormat dateFormat =new SimpleDateFormat("yyyy/MM/dd");
        String date=dateFormat.format(thisday);
//        ngaylapTxt  = DateFormat.getDateInstance (). format (myDate);
//        try
//        {
        pnbus.docphieunhap();
        
            boolean ok = false;
            if(kiemtra())
            {
                ok = true;
            }
            System.out.println(ok);
            if(ok)
            {
//                thietbiDTO tbDTO=new thietbiDTO();
                phieunhapDTO pn = new phieunhapDTO();
                pn.setPn_id(pnbus.getpn_id());               
                pn.setPn_ngaylap(date);               
                pnbus.themphieunhap(pn);
                
                //them chi tiet
                int rowCount = modelTb2.getRowCount();
                for (int i = 0; i < rowCount; i++) //duyet qua table chitiet
                {
                    System.out.println(i);
                    chitietphieunhapDTO dto = new chitietphieunhapDTO();
                    dto.setPn_id(pn.getPn_id());         
                    dto.setSp_id(Integer.parseInt(String.valueOf(ctpntable.getValueAt(i, 0))));
                    dto.setCt_soluong(Integer.parseInt(String.valueOf(ctpntable.getValueAt(i, 4))));
                    chitietphieunhapBUS busct = new chitietphieunhapBUS();
                    busct.themchitiet(dto);
//                    cong vao tồn kho
                    thietbiBus tb = new thietbiBus();
                    tb.congTonkho(Integer.parseInt(String.valueOf(ctpntable.getValueAt(i, 4)))
                            , Integer.parseInt(String.valueOf(ctpntable.getValueAt(i, 0))));
//                    cộng đơn giá
//                    tb.suaThietbi(Integer.parseInt((String)ctpntable.getValueAt(i, 0))
//                            , Integer.parseInt((String)ctpntable.getValueAt(i, 1))
//                            , tbDTO.getSp_mota()
//                            , tbDTO.getSp_dongia());
                }
                      JOptionPane.showMessageDialog(null, "Thêm phiếu nhập thành công");
                docthietbi();
                reset();
            }
//        } catch (Exception e)
//        {
//               System.out.println(e);
//        }
    }
    public boolean kiemtra()
    {
        boolean check = true;       

        return check;      
    }

    public void docthietbi()//doc thiết bị bên table pn
    {
        lbidpn.setText(String.valueOf(pnbus.getpn_id()));
        try
        {
//        if(!txtidncc.getText().equals(""))
//        {
        thietbiBus bus = new thietbiBus();
        bus.docThietbi();
            int rowCount = modelTb1.getRowCount();//remove all row
            for (int i = rowCount - 1; i >= 0; i--) {
                modelTb1.removeRow(i);
            }
        Vector header = new Vector();
        header.add("Sp_id");      
        header.add("Tên sp");
        header.add("Loai");
        header.add("Đơn giá");
        header.add("Tồn kho");              
        header.add("Đã bán");
        if (modelTb1.getRowCount()==0)
            { 
                modelTb1=new DefaultTableModel(header,0);
            } 
        
        for(thietbiDTO ct : thietbiBus.sumArrtb)
        {
//            if(ct.getIdmon().indexOf(txtidncc.getText()) >= 0)
//            {
                Vector row = new Vector();
                row.add(ct.sp_id);
                row.add(ct.sp_ten);
                row.add(ct.loai_id);
                row.add(ct.sp_dongia);
                row.add(ct.sp_tonkho);
                row.add(ct.sp_daban);
                modelTb1.addRow(row);
//            }
        }   
        //add model to jtable
        pntable.setModel(modelTb1);
        
        } catch(Exception e)
        {
            System.out.println(e);
            System.out.println("Lỗi đọc phiếu nhập");
        }
    }
    private void addBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseClicked

        them();
//        System.err.println("thành công");
    }//GEN-LAST:event_addBtnMouseClicked

    private void addBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseEntered
        // TODO add your handling code here:
        //addbtn
        addBtn.setBackground(Color.blue);
    }//GEN-LAST:event_addBtnMouseEntered

    private void addBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseExited
        // TODO add your handling code here:
        addBtn.setBackground(new Color(255, 153, 0));
    }//GEN-LAST:event_addBtnMouseExited

    private void docBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_docBtnMouseClicked
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_docBtnMouseClicked

    private void docBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_docBtnMouseEntered
        // TODO add your handling code here:
        docBtn.getDisabledIcon();
        ImageIcon logo = new ImageIcon("./src/img/icons8-process-35 (1).png");
        docBtn.setIcon(logo);
        docBtn.setBackground(Color.blue);
    }//GEN-LAST:event_docBtnMouseEntered

    private void docBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_docBtnMouseExited
        // TODO add your handling code here:
        docBtn.getDisabledIcon();
        ImageIcon logo = new ImageIcon("./src/img/icons8-process-35.png");
        docBtn.setIcon(logo);
        docBtn.setBackground(new Color(255, 153, 0));
    }//GEN-LAST:event_docBtnMouseExited

    private void ChitietBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChitietBtnMouseClicked
        // TODO add your handling code here:
        
        OverrallFrame.changeMainInfo(3);
    }//GEN-LAST:event_ChitietBtnMouseClicked

    private void ChitietBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChitietBtnMouseEntered
        // TODO add your handling code here:
        ChitietBtn.getDisabledIcon();
        ImageIcon logo = new ImageIcon("./src/img/icons8-view-more-30 (2).png");
        ChitietBtn.setIcon(logo);
        ChitietBtn.setBackground(Color.blue);
    }//GEN-LAST:event_ChitietBtnMouseEntered

    private void ChitietBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChitietBtnMouseExited
        // TODO add your handling code here:
        ChitietBtn.getDisabledIcon();
        ImageIcon logo = new ImageIcon("./src/img/icons8-view-more-30 (1).png");
        ChitietBtn.setIcon(logo);
        ChitietBtn.setBackground(new Color(255, 153, 0));
    }//GEN-LAST:event_ChitietBtnMouseExited

    private void themSpBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_themSpBtnMouseEntered
        // TODO add your handling code here:
        themSpBtn.setBackground(Color.blue);
    }//GEN-LAST:event_themSpBtnMouseEntered

    private void themSpBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_themSpBtnMouseExited
        // TODO add your handling code here:
        themSpBtn.setBackground(new Color(255, 153, 0));
    }//GEN-LAST:event_themSpBtnMouseExited

    private void themSpBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_themSpBtnMouseClicked
        // TODO add your handling code here:
//        String tb = "",ngay="";
//        try{
//            if(!txtdate.getDate().after(new Date())){
//                tb+="Ngày đã qua.Kiểm tra lại\n";
//            }else if(txtdate.getDate().equals("")){
//                tb+="Ngày không được để trống\n";
//            }
//            else{
//                ngay = new SimpleDateFormat("yyyy-MM-dd").format(txtdate.getDate());
//            }
//        }catch(Exception e){
//            tb+="Ngày không được để trống\n";
//        }
        OverrallFrame.changeMainInfo(8);
    }//GEN-LAST:event_themSpBtnMouseClicked

    private void jScrollPane3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane3MouseClicked
        // TODO add your handling code here:
//        addtTb1to2();
    }//GEN-LAST:event_jScrollPane3MouseClicked

    private void ctpntableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ctpntableMouseClicked
        // TODO add your handling code here:
        addTb2to1();
    }//GEN-LAST:event_ctpntableMouseClicked

    private void pntableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pntableMouseClicked
        // TODO add your handling code here:
        addtTb1to2();
    }//GEN-LAST:event_pntableMouseClicked
    public void timkiem(ArrayList<thietbiDTO> arr)
    {
        //hien thong tin tim kiem
    int rowCount = modelTb1.getRowCount();//remove all row
            for (int i = rowCount - 1; i >= 0; i--) {
                modelTb1.removeRow(i);
            }
        Vector header = new Vector();
        header.add("Id sản phẩm");
        header.add("Tên sản phẩm");
        header.add("Đơn giá");
        header.add("Loại");
        header.add("Đã bán");
        header.add("Tồn kho");
        header.add("");
        if (modelTb1.getRowCount()==0)
            { 
                modelTb1=new DefaultTableModel(header,0);
            } 
        for(thietbiDTO ct : arr)//duyet arr chua cac ket qua tìm kiếm
        {
                Vector row = new Vector();
                row.add(ct.getSp_id());
                row.add(ct.getSp_ten());
                row.add(ct.getSp_mota());
                row.add(ct.getSp_dongia());
                row.add(ct.getLoai_id());
                row.add(ct.getSp_daban());
                row.add(ct.getSp_tonkho());
                modelTb1.addRow(row);
        }
        //add model to jtable
        pntable.setModel(modelTb1);
}  
    
    public static void main(String[] args) 
    {
        JFrame j = new JFrame();
        j.setSize(960,700);
        j.setLayout(null);
        JPanel p =new PhieuNhapGUI();
        p.setBounds(0, 0, 960, 700);
        //j.add(g);
        //j.pack();
        j.add(p);
        j.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ChitietBtn;
    private javax.swing.JLabel TxtTongtien;
    private javax.swing.JLabel addBtn;
    private javax.swing.JTable ctpntable;
    private javax.swing.JLabel docBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lbidpn;
    private javax.swing.JTable pntable;
    private javax.swing.JLabel themSpBtn;
    // End of variables declaration//GEN-END:variables


    }
